definitions:
  requests.Login:
    properties:
      email:
        description: Email пользователя
        example: user@example.com
        type: string
      password:
        description: Пароль пользователя
        example: Password123!
        type: string
    required:
    - email
    - password
    type: object
  requests.Register:
    properties:
      email:
        description: Email пользователя, должен быть уникальным
        example: user@example.com
        type: string
      name:
        description: Имя пользователя
        example: Иван
        type: string
      password:
        description: Пароль пользователя
        example: Password123!
        minLength: 8
        type: string
      surname:
        description: Фамилия пользователя
        example: Иванов
        type: string
      username:
        description: Имя для входа, должно быть уникальным
        example: ivan2024
        type: string
    required:
    - email
    - name
    - password
    - surname
    - username
    type: object
  responses.Response:
    properties:
      details:
        additionalProperties: true
        description: Дополнительные данные ответа | ЕСЛИ ДАННЫХ НЕТ, ТО НЕ ВОЗВРАЩАЕТСЯ
        type: object
      error:
        description: Сообщение об ошибке | ЕСЛИ ОШИБКИ НЕТУ, ТО НЕ ВОЗВРАЩАЕТСЯ
        example: USERNAME_ALREADY_TAKEN
        type: string
      message:
        description: Сообщение об успешном выполнении операции | ЕСЛИ ОПЕРАЦИЯ НЕ
          ВЫПОЛНЕНА, ТО НЕ ВОЗВРАЩАЕТСЯ
        example: user registered successfully
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Выполняет выход пользователя из текущей сессии
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь успешно вышел
          schema:
            $ref: '#/definitions/responses.Response'
        "401":
          description: MISSING_AUTHORIZATION_TOKEN | INVALID_AUTHORIZATION_HEADER_FORMAT
            | INVALID_OR_EXPIRED_TOKEN
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/responses.Response'
      security:
      - BearerAuth: []
      summary: Выход пользователя
      tags:
      - auth
  /auth/logout/all:
    post:
      consumes:
      - application/json
      description: Выполняет выход пользователя из всех активных сессий
      produces:
      - application/json
      responses:
        "200":
          description: Выход из всех сессий выполнен успешно
          schema:
            $ref: '#/definitions/responses.Response'
        "401":
          description: MISSING_AUTHORIZATION_TOKEN | INVALID_AUTHORIZATION_HEADER_FORMAT
            | INVALID_OR_EXPIRED_TOKEN
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Внутренняя ошибка сервера | Не найден userID в контексте
          schema:
            $ref: '#/definitions/responses.Response'
      security:
      - BearerAuth: []
      summary: Выход из всех сессий
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя и выдает токены доступа
      parameters:
      - description: Данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.Login'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь успешно авторизован, возвращает accessToken
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Ошибка валидации | INVALID_EMAIL
          schema:
            $ref: '#/definitions/responses.Response'
        "401":
          description: INVALID_PASSWORD
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Вход пользователя
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя в системе
      parameters:
      - description: Данные для регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Пользователь успешно зарегистрирован
          schema:
            $ref: '#/definitions/responses.Response'
        "400":
          description: Ошибка валидации | USERNAME_ALREADY_TAKEN | EMAIL_ALREADY_TAKEN
          schema:
            $ref: '#/definitions/responses.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/responses.Response'
      summary: Регистрация нового пользователя
      tags:
      - auth
swagger: "2.0"
